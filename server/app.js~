const express = require('express');
const path = require('path');
const favicon = require('serve-favicon');
const logger = require('morgan');
const cookieParser = require('cookie-parser');
const bodyParser = require('body-parser');
const  mongoElasticsearch = require('mongo-elasticsearch');

const index = require('./routes/index');

const app = express();

// Elasticsearch rich
var way = new mongoElasticsearch.Transfer({
  esOpts: {
    host: 'database-search-engine:9200',
    log: 'trace'
  },
  esTargetType: 'entreprise',
  esTargetIndex: 'sirene',
  mongoUri: 'mongodb://database-server:27017/webbot',
  mongoSourceCollection: 'sirene'
});

way.start().then(function(results) {
  console.log(results);
  process.exit();
});

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'jade');

// uncomment after placing your favicon in /public
//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/', index);

// catch 404 and forward to error handler
app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
